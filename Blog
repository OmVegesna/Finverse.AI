<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>My Blog</title>
    <style>
        body {
            font-family: Arial, sans-serif;
            background-color: #f4f4f4;
            margin: 0;
            padding: 0;
        }
        .container {
            max-width: 800px;
            margin: 0 auto;
            padding: 20px;
        }
        header {
            text-align: center;
            padding: 20px 0;
            background-color: #333;
            color: white;
        }
        h1 {
            margin: 0;
        }
        .blog-post {
            background-color: white;
            margin-bottom: 20px;
            padding: 20px;
            box-shadow: 0px 0px 10px rgba(0, 0, 0, 0.1);
            border-radius: 5px;
        }
        .blog-post h2 {
            margin-top: 0;
        }
        .new-post-form {
            background-color: white;
            padding: 20px;
            box-shadow: 0px 0px 10px rgba(0, 0, 0, 0.1);
            margin-bottom: 20px;
            border-radius: 5px;
        }
        label, textarea, input, button {
            display: block;
            width: 100%;
            margin-bottom: 10px;
        }
        input, textarea {
            padding: 10px;
            border: 1px solid #ddd;
            border-radius: 5px;
        }
        button {
            padding: 10px;
            background-color: #28a745;
            color: white;
            border: none;
            border-radius: 5px;
            cursor: pointer;
        }
        button:hover {
            background-color: #218838;
        }
    </style>
</head>
<body>
    <header>
        <h1>Welcome to My Blog</h1>
    </header>

    <div class="container">
        <!-- Blog Post Form -->
        <div class="new-post-form">
            <h2>Create a New Blog Post</h2>
            <label for="title">Title</label>
            <input type="text" id="title" placeholder="Blog post title" required>
            
            <label for="content">Content</label>
            <textarea id="content" placeholder="Write your blog post content here" required></textarea>

            <button id="submitPost">Publish Post</button>
        </div>

        <!-- Blog Posts Section -->
        <div id="blogPosts">
            <h2>Recent Blog Posts</h2>
            <!-- Blog posts will be dynamically inserted here -->
        </div>
    </div>

    <script>
        const blogPosts = [
            {title: "My First Post", content: "Welcome to my blog!"},
            {title: "Blog Post 2", content: "This is the second blog post."}
        ];

        // Function to display blog posts
        function displayBlogPosts() {
            const blogPostsContainer = document.getElementById('blogPosts');
            blogPostsContainer.innerHTML = '<h2>Recent Blog Posts</h2>';

            blogPosts.forEach(post => {
                const postDiv = document.createElement('div');
                postDiv.className = 'blog-post';
                postDiv.innerHTML = `<h2>${post.title}</h2><p>${post.content}</p>`;
                blogPostsContainer.appendChild(postDiv);
            });
        }

        // Add event listener to publish new blog post
        document.getElementById('submitPost').addEventListener('click', function() {
            const title = document.getElementById('title').value;
            const content = document.getElementById('content').value;
            
            if (title && content) {
                blogPosts.push({title, content});
                displayBlogPosts();

                // Clear form after submission
                document.getElementById('title').value = '';
                document.getElementById('content').value = '';
            } else {
                alert('Please fill out both title and content!');
            }
        });

        // Display initial blog posts
        displayBlogPosts();
    </script>

// Function to fetch Medium posts
async function fetchMediumPosts() {
    const mediumUserId = 'YOUR_MEDIUM_USER_ID'; // Replace with your Medium user ID
    const mediumApiUrl = `https://api.medium.com/v1/users/${mediumUserId}/publications`;

    try {
        const response = await fetch(mediumApiUrl, {
            headers: {
                'Authorization': `Bearer YOUR_MEDIUM_INTEGRATION_TOKEN` // Replace with your token
            }
        });
        const data = await response.json();

        if (data.data && data.data.length > 0) {
            displayMediumPosts(data.data);
        } else {
            console.log("No Medium posts found.");
        }
    } catch (error) {
        console.error("Error fetching Medium posts:", error);
    }
}

// Function to display Medium posts
function displayMediumPosts(posts) {
    const blogPostsContainer = document.getElementById('blogPosts');
    blogPostsContainer.innerHTML = '<h2>Recent Blog Posts</h2>';

    posts.forEach(post => {
        const postDiv = document.createElement('div');
        postDiv.className = 'blog-post';
        postDiv.innerHTML = `<h2>${post.title}</h2><p>${post.content.slice(0, 200)}... <a href="${post.url}" target="_blank">Read more</a></p>`;
        blogPostsContainer.appendChild(postDiv);
    });
}

// Fetch Medium posts on page load
fetchMediumPosts();

</body>
</html>

